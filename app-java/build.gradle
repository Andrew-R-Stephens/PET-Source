plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.android'
    //id 'kotlin-android'

    // Apply the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

def playcoreDir = file('G:\\Programs\\AndroidStudioRepositories\\play-core-native-sdk-1.10.0\\play-core-native-sdk')

android {

    compileSdk 34
    ndkVersion ndkVersion

    buildToolsVersion = '34.0.0'


    /*
        Compose Options
        ----------------
    */
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.1"
    }
    kotlin {
        jvmToolchain(17)
    }
    /* ---------------- */


    bundle {
        language {
            enableSplit = false
        }
    }

    defaultConfig {
        applicationId 'com.TritiumGaming.phasmophobiaevidencepicker'

        minSdkVersion 21
        targetSdkVersion 34
        versionCode 91
        versionName "8.2.2.1"

        externalNativeBuild {
            cmake {
                // Define the PLAYCORE_LOCATION directive.
                arguments "-DANDROID_STL=c++_static", "-DPLAYCORE_LOCATION=$playcoreDir"
            }
        }
        ndk {
            // Skip deprecated ABIs. Only required when using NDK 16 or earlier.
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // PLAYCORE
            proguardFile "$playcoreDir/proguard/common.pgcfg"
            proguardFile "$playcoreDir/proguard/per-feature-proguard-files"
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // PLAYCORE
            proguardFile "$playcoreDir/proguard/common.pgcfg"
            proguardFile "$playcoreDir/proguard/per-feature-proguard-files"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lint {
        disable 'RestrictedApi'
    }
    namespace 'com.TritiumGaming.phasmophobiaevidencepicker'

    sourceSets {
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
    }
}

dependencies {

    implementation libs.firebase.analytics
    implementation libs.androidx.core.ktx

    implementation libs.android.support.multidex

    //noinspection GradleDependency
    implementation libs.kotlin.stdlib
    implementation libs.google.gson

    // PRIMARY
    implementation libs.androidx.work.runtime
    implementation libs.androidx.appcompat.core
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragmentKtx
    implementation libs.androidx.navigation.uiKtx
    implementation libs.androidx.cardview.core
    implementation libs.androidx.legacy.supportV4
    implementation libs.android.material
    testImplementation libs.junit
    androidTestImplementation libs.androidx.testExt.junit
    androidTestImplementation libs.androidx.espresso.core

    // --- Google Credential Manager ----
    implementation(libs.androidx.credentials.core)
    implementation(libs.androidx.credentials.playServicesAuth)
    implementation libs.firebaseUi.auth
    // Phillip Lackner suggested for OTC (one-tap client)
    implementation libs.firebase.authKtx
    implementation libs.android.playServices.auth
    // ----------------------------------

    // GOOGLE FIREBASE
    // Import the BoM for the Firebase platform
    implementation libs.firebase.auth
    implementation platform(libs.firebase.bom)
    // GOOGLE FIREBASE FIRESTORE
    implementation libs.firebase.firestore
    // GOOGLE BILLING API
    implementation libs.android.billing.core


    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation libs.firebase.crashlyticsCore
    implementation libs.firebase.analytics
    implementation libs.firebase.perfCore
    // GOOGLE ADS
    implementation libs.android.playServices.ads
    implementation libs.android.ump.core

    //GOOGLE GSON
    implementation libs.google.gson

    // IN-APP REVIEWS
    /* This dependency is downloaded from the Google’s Maven repository.
     * So, make sure you also include that repository in your project's build.gradle file.*/
    implementation libs.android.play.core
    // For Kotlin users also add the Kotlin extensions library for Play Core:
    implementation libs.android.play.coreKtx
    // This dependency is downloaded from the Google’s Maven repository.
    // So, make sure you also include that repository in your project's build.gradle file.

    // FRAGMENTS
    // Java language implementation
    // implementation libs.androidx.fragment
    implementation libs.androidx.fragmentKtx

    // For use with animated gifs
    implementation libs.droidsonroids.gifDrawable

    // DO NOT UPDATE THIS -- BREAKING CHANGES
    implementation libs.commonsIo.core

    /*
        ---- START----
        ANDROIDX LEANBACK
    */
    implementation libs.androidx.leanback.core
    // leanback-preference is an add-on that provides a settings UI for TV apps.
    implementation libs.androidx.leanback.preference
    // leanback-paging is an add-on that simplifies adding paging support to a RecyclerView Adapter.
    implementation libs.androidx.leanback.paging
    // leanback-tab is an add-on that provides customized TabLayout to be used as the top navigation bar.
    implementation libs.androidx.leanback.tab

    /*
        ---- START----
        ANDROID COMPOSE
    */
    implementation platform(libs.androidx.compose.bom)
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.composeUi.testJunit4
    debugImplementation libs.androidx.composeUi.testManifest

    // Android Studio Preview support
    debugImplementation libs.androidx.composeUi.tooling

    implementation libs.androidx.composeUi.core
    implementation libs.androidx.composeMaterial.core
    implementation libs.androidx.composeUi.toolingPreview

    implementation libs.androidx.activityCompose
    implementation libs.androidx.lifecycle.runtimeKtx
    implementation libs.androidx.lifecycle.viewmodelCompose
    implementation libs.androidx.lifecycle.runtimeCompose
    implementation libs.androidx.navigation.compose

    implementation libs.coilKt.compose

    /*
        ----- END -----
    */

}